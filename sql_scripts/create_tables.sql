-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.

BEGIN;

CREATE TYPE Account_type AS ENUM ('Customer','Employee', 'Manager','Admin');

CREATE TABLE IF NOT EXISTS public.users
(
    user_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    username character varying(255) NOT NULL,
    accnt_type Account_type NOT NULL,
    email character varying(255) NOT NULL,
    password_hash character varying(60), --NOT NULL,  --bcrypt
    PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS public.jobs
(
    job_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    customer_id integer NOT NULL,
    load_addr integer,
    unload_addr integer,
    start_time timestamp with time zone,
    hours_labor interval NOT NULL DEFAULT '0 hours',
    finalized boolean NOT NULL DEFAULT False,
    rooms jsonb,
    pack boolean NOT NULL DEFAULT False,
    unpack boolean NOT NULL DEFAULT False,
    load boolean NOT NULL DEFAULT False,
    unload boolean NOT NULL DEFAULT False,
    clean boolean NOT NULL DEFAULT False,
    milage integer NOT NULL DEFAULT 0,
    cost money NOT NULL DEFAULT 0,
    PRIMARY KEY (job_id)
);

CREATE TYPE Residence_type AS ENUM ('Business', 'House','Apartment','Condo','Storage Unit');

CREATE TABLE IF NOT EXISTS public.addresses
(
    address_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    street character varying NOT NULL,
    city character varying NOT NULL,
    state character varying NOT NULL,
    zip character varying NOT NULL,
    res_type Residence_type NOT NULL,
    flights integer NOT NULL DEFAULT 0,
    unit_num character varying(20),
    business_name character varying (255),
    PRIMARY KEY (address_id)
);

CREATE TYPE Employee_type AS ENUM ('Full-time', 'Part-time','Manager');

CREATE TABLE IF NOT EXISTS public.employee_info
(
    employee_id integer NOT NULL,
    employee_type Employee_type NOT NULL,
    PRIMARY KEY (employee_id)
);

CREATE TABLE IF NOT EXISTS public.employee_jobs
(
    emp_id integer,
    job_id integer,
    requested boolean,
    assigned boolean,
    PRIMARY KEY (emp_id, job_id)
);

ALTER TABLE IF EXISTS public.jobs
    ADD FOREIGN KEY (customer_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.jobs
    ADD FOREIGN KEY (load_addr)
    REFERENCES public.addresses (address_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.jobs
    ADD FOREIGN KEY (unload_addr)
    REFERENCES public.addresses (address_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employee_info
    ADD FOREIGN KEY (employee_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employee_jobs
    ADD FOREIGN KEY (emp_id)
    REFERENCES public.employee_info (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employee_jobs
    ADD FOREIGN KEY (job_id)
    REFERENCES public.jobs (job_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;
